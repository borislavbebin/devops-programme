name: Pytohn CI


on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install python
        uses: actions/setup-python@v4
        with:
          python-version: "3.X"

  editorconfig:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Run EditorConfig Checker
        uses: editorconfig-checker/action-editorconfig-checker@main

  pylint:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          # upgrade pip
          python -m pip install --upgrade pip

          # install requirements
          python -m pip install -r ./requirements.txt

          # install pylint
          python -m pip install black pylint

      - name: Analyzing the code with pylint
        run: |
          pylint --rcfile='./.pylintrc' $(git ls-files './app')

      - name: Lint with Markdown-lint
        uses: articulate/actions-markdownlint@v1
        with:
          files: './*.md'
          ignore: node_modules
          version: 0.28.1

  unit_test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          # upgrade pip
          python -m pip install --upgrade pip

          # install dependencies
          python -m pip install -r ./requirements.txt

      - name: Execute unit-test
        run: |
          python -m unittest discover -s ./app -p "*_test.py"

  secrets_scan:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download and Install GitLeaks
        run: |
          curl -sL https://github.com/gitleaks/gitleaks/releases/download/v8.18.1/gitleaks_8.18.1_linux_x64.tar.gz -o gitleaks.tar.gz
          tar -xzvf gitleaks.tar.gz
          mv gitleaks /usr/local/bin/
          chmod +x /usr/local/bin/gitleaks

      - name: Scan for Secrets
        run: gitleaks -f json -r gitleaks-report.json

      - name: Upload gitleaks findings
        uses: actions/upload-artifact@v3
        with:
          name: gitleaks-findings
          path: ./gitleaks-report.json

  sonarcloud:
    runs-on: ubuntu-20.04
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: SonarCloud Scanner
        uses: sonarsource/sonarcloud-github-action@master
        with:
          projectBaseDir: .
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  snyk-scan:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install Snyk
        run: npm install -g snyk

      - name: Run Snyk SCA
        run: snyk test --all-projects
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
